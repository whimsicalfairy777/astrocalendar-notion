<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Astro Calendar</title>
  <link
    href="https://fonts.googleapis.com/css2?family=UnifrakturMaguntia&display=swap"
    rel="stylesheet"
  />
  <style>
    body {
      font-family: 'UnifrakturMaguntia', cursive;
      background-color: #EEF3ED;
      text-align: center;
      padding: 20px;
      position: relative;
      overflow: hidden;
    }
    .calendar-container {
      background-color: #D1C9BD;
      border: 3px solid #9C816E;
      display: inline-block;
      padding: 20px;
      box-shadow: 5px 5px 15px rgba(0,0,0,0.2);
    }
    h1 {
      margin: 0 0 10px;
      color: #9C816E;
      font-size: 32px;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }
    .calendar {
      display: grid;
      grid-template-columns: repeat(7, 40px);
      grid-gap: 5px;
      justify-content: center;
      margin-bottom: 15px;
    }
    .calendar div {
      width: 40px; height: 40px;
      line-height: 40px;
      cursor: pointer;
      color: #9C816E;
      border: 1px solid transparent;
      transition: all .2s;
    }
    .calendar .header {
      font-weight: bold;
    }
    .calendar div:hover {
      background-color: rgba(108,26,26,0.1);
      border-color: #9C816E;
    }
    .calendar .today {
      background-color: rgba(108,26,26,0.2);
      border-color: #9C816E;
    }
    #eventSummary {
      color: #448361;
      font-size: 20px;
      padding: 10px;
      background-color: #D1C9BD;
      border: 2px solid #9C816E;
      display: inline-block;
      text-align: left;
      min-width: 300px;
      max-width: 90vw;
    }
    /* Floating Stars */
    .heart {
      position: absolute;
      color: #6F1A1A;
      font-size: 24px;
      animation: floatStars 5s linear infinite;
      opacity: 0.7;
    }
    @keyframes floatStars {
      0% { transform: translateY(0) scale(1); opacity: 1 }
      100% { transform: translateY(-100vh) scale(0.5); opacity: 0 }
    }
  </style>
</head>
<body>
  <div class="calendar-container">
    <h1>✦ Astro &amp; Lunar Calendar ✦</h1>
    <div id="calendar" class="calendar"></div>
    <div id="eventSummary">Click any date to see events</div>
  </div>

  <script>
    // Example events: extend this with ALL your astrological events & lunar phases
    const events = {
      '2025-07-01': ['New Moon – fresh beginnings', 'Mars enters Leo – bold action'],
      '2025-07-17': ['Full Moon in Capricorn – culmination', 'Venus trine Neptune – romance'],
      '2025-08-07': ['First Quarter Moon – take action'],
      '2025-08-15': ['Mercury retrograde begins – review plans'],
      // ... add more YYYY-MM-DD keys and arrays of descriptions
    };

    const calendarEl = document.getElementById('calendar');
    const summaryEl = document.getElementById('eventSummary');

    // Render weekday headers
    ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].forEach(d => {
      const hd = document.createElement('div');
      hd.textContent = d;
      hd.classList.add('header');
      calendarEl.appendChild(hd);
    });

    // Build current month calendar
    const today = new Date();
    const year = today.getFullYear();
    const month = today.getMonth();
    const firstDay = new Date(year, month, 1).getDay();
    const daysInMonth = new Date(year, month+1, 0).getDate();

    // blank slots before 1st
    for(let i=0; i<firstDay; i++){
      calendarEl.appendChild(document.createElement('div'));
    }
    // day cells
    for(let d=1; d<=daysInMonth; d++){
      const dateStr = `${year}-${String(month+1).padStart(2,'0')}-${String(d).padStart(2,'0')}`;
      const cell = document.createElement('div');
      cell.textContent = d;
      if(dateStr === today.toISOString().slice(0,10)){
        cell.classList.add('today');
      }
      cell.addEventListener('click', () => {
        const ev = events[dateStr];
        if(ev){
          summaryEl.innerHTML = `<strong>${dateStr}</strong><br>` + ev.map(x=>'• '+x).join('<br>');
        } else {
          summaryEl.innerHTML = `<strong>${dateStr}</strong><br>No events recorded.`;
        }
      });
      calendarEl.appendChild(cell);
    }

    // Floating Stars
    function createStar(){
      const star = document.createElement('div');
      star.className = 'star';
      star.textContent = '✦';
      star.style.left = Math.random()*100 + 'vw';
      star.style.animationDuration = (Math.random()*3+2)+'s';
      document.body.appendChild(star);
      setTimeout(()=> star.remove(), 5000);
    }
    setInterval(createStar, 800);
  </script>
</body>
</html>
